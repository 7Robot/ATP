#!/usr/bin/env python3

import sys

import argparse, configparser

from atp.protos import load as load_protos
from atp.protos import cformats


def print_protos(protos):
    for proto in protos:
        p = protos[proto]
        print("%s: (board %d)" %(proto, p['id']))
        for packet in p['packets']:
            pa = p['packets'][packet]
            print("  [%3d, %4s] %s" %(pa['id'], pa['transmitter'], packet))
            for arg in pa['args']:
                format = pa['args'][arg]
                print("      %-10s \t(%s)" %(arg, cformats[format]))


if __name__ == "__main__":

    parser = argparse.ArgumentParser(description='Output semantic.')
    parser.add_argument('-c', '--config', dest='config',
            help='Set configuration file.')
    parser.add_argument('-s', '--semantic', dest='semantic',
            help='Set semantic file to use.')
    args = parser.parse_args()

    semantic = args.semantic
    if not semantic: # searching semantic file path in config file
        conf = '/etc/atp.conf'
        if args.config: # use non default config file
            conf = args.config
        config = configparser.ConfigParser()
        config.read(conf)
        if 'atp' in config and 'semantic' in config['atp']:
            semantic = config['atp']['semantic']
    if not semantic_file:
        print("Error: can't found semantic file.", file=sys.stderr)
        sys.exit(1)

    protos = load_protos(semantic)
    print_protos(protos)
